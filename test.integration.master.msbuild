<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="Test_Integration_Master_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsTestIntegrationMaster>true</ExistsTestIntegrationMaster>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildLogs Condition=" '$(DirBuildLogs)' == '' ">$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
        <DirBuildTempTest>$(DirBuildTemp)\test</DirBuildTempTest>
        <DirBuildTempTestSpec>$(DirBuildTempTest)\spec</DirBuildTempTestSpec>

        <DirConfig Condition=" '$(DirConfig)' == '' ">$(DirWorkspace)\config</DirConfig>
        <DirScripts Condition=" '$(DirScripts)' == '' ">$(DirWorkspace)\scripts</DirScripts>
        <DirScriptsAzure Condition=" '$(DirScriptsAzure)' == '' ">$(DirScripts)\azure</DirScriptsAzure>

        <DirSpec Condition=" '$(DirSpec)' == '' ">$(DirWorkspace)\spec</DirSpec>
        <DirSpecMaster Condition=" '$(DirSpecMaster)' == '' ">$(DirSpec)\jenkinsmaster</DirSpecMaster>
        
        <!-- Azure configuration -->
        <AzureSubscriptionName Condition=" '$(AzureSubscriptionName)' == '' ">UNDEFINED</AzureSubscriptionName>
        <AzureSslCertificateName Condition=" '$(AzureSslCertificateName)' == '' ">UNDEFINED</AzureSslCertificateName>
        <AzureServiceName Condition=" '$(AzureServiceName)' == '' ">UNDEFINED</AzureServiceName>
        <AzureStorageAccount Condition=" '$(AzureStorageAccount)' == '' ">UNDEFINED</AzureStorageAccount>
        
        <!-- External tools -->
        <ToolsExternalPowershellPath Condition=" '$(ToolsExternalPowershellPath)' == '' ">C:\Windows\System32\WindowsPowerShell\v1.0</ToolsExternalPowershellPath>
        
        <!-- Files -->
        <FileSemanticVersion Condition=" '$(FileSemanticVersion)' == '' ">$(DirBuildTemp)\semantic_version.json</FileSemanticVersion>
        <FileJenkinsMasterConfig Condition=" '$(FileJenkinsMasterConfig)' == '' ">$(DirBuildTemp)\jenkinsmaster.xml</FileJenkinsMasterConfig>
        <FileJenkinsMasterTestScript Condition=" '$(FileJenkinsMasterTestScript)' == '' ">$(DirScriptsAzure)\Verify-AzureWindowsImage.ps1</FileJenkinsMasterTestScript>
        <FileErrorRemoveImage Condition=" '$(FileErrorRemoveImage)' == '' ">$(DirWorkspace)\error.remove.image.msbuild</FileErrorRemoveImage>
        
        <!-- Version number -->
        <VersionSemantic>0</VersionSemantic>
    </PropertyGroup>
    
    <Import Project="$(DirMsBuildShared)\shared.templatetokens.msbuild" 
            Condition="Exists('$(DirMsBuildShared)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirMsBuildExtensions)\GetSemanticVersionFromFile.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\GetSemanticVersionFromFile.msbuild') AND '$(ExistsExtensionsGetSemanticVersionFromFile)' != 'true' " />
    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />
            
    <Target Name="Test_Integration_Master_Run" 
            DependsOnTargets="_Test_Integration_Master_DisplayInfo">
        <CallTarget Targets="_Test_Integration_Master_GatherTestFiles" />
        <CallTarget Targets="_Test_Integration_Master_Execute" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_Test_Integration_Master_DisplayInfo" 
            DependsOnTargets="_Test_Integration_Master_DebugLog">
        <Message Text="Running integration tests on the master image ..." />
    </Target>
    
    <Target Name="_Test_Integration_Master_DebugLog" 
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the build logs is located at:            $(DirBuildLogs)" />
        <Message Text="The directory containing the temporary build files is located at: $(DirBuildTemp)" />
        <Message Text="The directory containing the packer configuration is located at:  $(DirConfig)" />
        <Message Text="The directory containing the installation scripts is located at:  $(DirScripts)" />
        <Message Text=" " />
        
        <Message Text="Jenkins master configuration template file is located at: $(FileJenkinsMasterConfigTemplate)" />
        <Message Text="Jenkins master configuration file is located at:          $(FileJenkinsMasterConfig)" />
        <Message Text="Jenkins master build script is located at:                $(FileJenkinsMasterScript)" />
        <Message Text=" " />
        
        <Message Text="Powershell command line executable is located at:         $(ToolsExternalPowershellPath)" />
        <Message Text=" " />
    </Target>

    <Target Name="_Test_Integration_Master_GatherTestFiles">
        <MakeDir Directories="$(DirBuild)" 
                 Condition="!Exists('$(DirBuild)')" />
        <MakeDir Directories="$(DirBuildTemp)" 
                 Condition="!Exists('$(DirBuildTemp)')" />
        <MakeDir Directories="$(DirBuildTempTest)" 
                 Condition="!Exists('$(DirBuildTempTest)')" />
        <MakeDir Directories="$(DirBuildTempTestSpec)"
                 Condition="!Exists('$(DirBuildTempTestSpec)')" />
        
        <!-- Download all required test files -->
        <ItemGroup>
            <TestFiles Include="$(DirScriptsAzure)\Verify-ApplicationsOnWindows.ps1" />
        </ItemGroup>
        <Copy SourceFiles="@(TestFiles)"
              DestinationFiles="@(TestFiles->'$(DirBuildTempTest)\%(RecursiveDir)%(Filename)%(Extension)')" />

        <ItemGroup>
            <SpecFiles Include="$(DirSpecMaster)\**\*.*" />
        </ItemGroup>
        <Copy SourceFiles="@(SpecFiles)"
              DestinationFiles="@(SpecFiles->'$(DirBuildTempTestSpec)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>
    
    <Target Name="_Test_Integration_Master_Execute"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">

        <!-- Make sure the whole thing stops if something goes wrong -->
        <CreateProperty Value="$ErrorActionPreference = &#39;Stop&#39; ">
            <Output TaskParameter="Value" PropertyName="CommandErrorActionPreference" />
        </CreateProperty>
        
        <!-- Import Azure -->
        <CreateProperty Value="Import-Module Azure">
            <Output TaskParameter="Value" PropertyName="CommandImportAzure" />
        </CreateProperty>
        
        <!-- Execute the tests and store the results. -->
        <CreateProperty Value="&amp; &#39;$(FileJenkinsMasterTestScript)&#39; -configFile &#39;$(FileJenkinsMasterConfig)&#39; -azureScriptDirectory &#39;$(DirScriptsAzure)&#39; -testDirectory &#39;$(DirBuildTempTest)&#39; -logDirectory &#39;$(DirBuildLogs)&#39; -Verbose">
            <Output TaskParameter="Value" PropertyName="CommandInvokeTest" />
        </CreateProperty>
        
        <CreateProperty Value="$(CommandErrorActionPreference) &#059; $(CommandImportAzure) &#059; $(CommandInvokeTest)">
            <Output TaskParameter="Value" PropertyName="CommandTest" />
        </CreateProperty>
        <Exec Command="&quot;$(ToolsExternalPowershellPath)\powershell.exe&quot; -NonInteractive -NoProfile -ExecutionPolicy Bypass -Command &quot; $(CommandTest) &quot;" />
        
        <!-- On Failure nuke the image -->
        <OnError ExecuteTargets="_Test_Integration_Master_RemoveImage" />
    </Target>
    
    <Target Name="_Test_Integration_Master_RemoveImage" >
        <MsBuild Projects="$(FileErrorRemoveImage)" Properties="FileJenkinsConfig=$(FileJenkinsMasterConfig);BuildPropertyFile=$(BuildPropertyFile)" />
    </Target>
 </Project>